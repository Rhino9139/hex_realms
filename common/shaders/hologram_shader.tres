[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://h58hxy2run1s"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_mqdks"]
default_input_values = [0, 0.0, 1, 0.03]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_8th04"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c2gi7"]
constant = 0.5

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5km3h"]
constant = Color(0, 1, 0, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_4vfq3"]
source = 5

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_aya8w"]
parameter_name = "Noise"
texture_repeat = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_iqia4"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_t13kn"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_sgbui"]
op_type = 0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Noise : repeat_enable;



void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(0.000000, 1.000000, 0.000000, 1.000000);


// FloatConstant:2
	float n_out2p0 = 0.500000;


// Input:7
	float n_out7p0 = TIME;


// FloatOp:10
	float n_in10p1 = 0.03000;
	float n_out10p0 = n_out7p0 * n_in10p1;


// VectorCompose:8
	float n_in8p0 = 0.00000;
	vec2 n_out8p0 = vec2(n_in8p0, n_out10p0);


// UVFunc:6
	vec2 n_in6p1 = vec2(1.00000, 1.00000);
	vec2 n_out6p0 = n_out8p0 * n_in6p1 + UV;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Noise, n_out6p0);


// VectorOp:11
	vec3 n_out11p0 = vec3(n_out3p0.xyz) * vec3(n_out4p0.xyz);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out2p0;
	EMISSION = n_out11p0;


}
"
nodes/fragment/0/position = Vector2(640, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeFloatConstant_c2gi7")
nodes/fragment/2/position = Vector2(220, -40)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_5km3h")
nodes/fragment/3/position = Vector2(120, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_4vfq3")
nodes/fragment/4/position = Vector2(-120, 320)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture2DParameter_aya8w")
nodes/fragment/5/position = Vector2(-580, 340)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_iqia4")
nodes/fragment/6/position = Vector2(-540, 100)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_t13kn")
nodes/fragment/7/position = Vector2(-1340, 120)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorCompose_sgbui")
nodes/fragment/8/position = Vector2(-796.86, 114.84)
nodes/fragment/10/node = SubResource("VisualShaderNodeFloatOp_mqdks")
nodes/fragment/10/position = Vector2(-1020, 260)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_8th04")
nodes/fragment/11/position = Vector2(380, 260)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 0, 0, 5, 0, 4, 2, 6, 0, 4, 0, 8, 0, 6, 2, 7, 0, 10, 0, 10, 0, 8, 1, 11, 0, 0, 5, 4, 0, 11, 1, 3, 0, 11, 0)
